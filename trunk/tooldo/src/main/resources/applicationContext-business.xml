<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd">

	<context:property-placeholder location="classpath:/tooldo.properties"/>

	<!-- Mail -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${mail.host}</value>
		</property>
		<property name="port">
			<value>${mail.port}</value>
		</property>
		<property name="username">
			<value>${mail.username}</value>
		</property>
		<property name="password">
			<value>${mail.password}</value>
		</property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
			</props>
		</property>
	</bean>

	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from">
			<value>${mail.from}</value>
		</property>
		<property name="subject">
			<value>${mail.subject}</value>
		</property>
	</bean>

	<bean id="mailSupport"
		class="net.escritoriodigital.unicamp.redefor.support.mail.impl.MailSupportImpl">
		<property name="mailSender">
			<ref bean="mailSender" />
		</property>
		<property name="message">
			<ref bean="mailMessage" />
		</property>
	</bean>

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />


	<bean id="contextApplicationContextProvider"
		class="net.escritoriodigital.components.spring.ApplicationContextProvider"></bean>

	<!-- JPA EntityManagerFactory -->

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="tooldo-pu" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    	<property name="entityManagerFactory" ref="entityManagerFactory" />
 	</bean>


	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!-- Activates various annotations to be detected in bean classes: Spring's
		@Required and @Autowired, as well as JSR 250's @PostConstruct, @PreDestroy
		and @Resource (if available) and JPA's @PersistenceContext and @PersistenceUnit
		(if available). -->
	<!-- context:annotation-config/ -->
	<context:component-scan base-package="net.escritoriodigital.workflow" />
	<context:component-scan base-package="net.escritoriodigital.components.service" />
	<context:component-scan base-package="net.escritoriodigital.unicamp.redefor.service" />
	<context:component-scan base-package="net.escritoriodigital.unicamp.redefor.bean" />
	<context:component-scan base-package="net.escritoriodigital.unicamp.redefor.support" />

	<!-- Instruct Spring to perform declarative transaction management automatically
		on annotated classes. -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<task:annotation-driven />

	<!-- Post-processor to perform exception translation on @Repository classes
		(from native exceptions such as JPA PersistenceExceptions to Spring's DataAccessException
		hierarchy). -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean
		class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

</beans>